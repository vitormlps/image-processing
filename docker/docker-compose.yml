
services:
  stream-simulator:
    image: bluenviron/mediamtx:latest-ffmpeg
    environment:
      - MTX_PROTOCOLS=tcp
    ports:
      - "8554:8554"
      - "1935:1935"
      - "8888:8888"
      - "8889:8889"
      - "8890:8890/udp"
      - "8189:8189/udp"
    volumes:
      - ./stream:/data
      - ./stream/config/mediamtx.yml:/mediamtx.yml
      - ./stream/fonts:/usr/share/fonts:ro
      - ./stream/etc/localtime:/etc/localtime:ro
      - ./stream/etc/timezone:/etc/timezone:ro

  input-producer:
    container_name: input-producer
    image: big-data-input-producer
    privileged: true
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-services
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    restart: unless-stopped
    volumes:
      - ../producer:/home/api
    depends_on:
      - kafka

  input-consumer-0:
    container_name: input-consumer-0
    image: big-data-input-consumer-0
    privileged: true
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-services
    ports:
      - 8000:8000
    stdin_open: true
    tty: true
    restart: unless-stopped
    volumes:
      - ../consumer-0:/home/api
    depends_on:
      - kafka
  
  input-consumer-1:
    container_name: input-consumer-1
    image: big-data-input-consumer-1
    privileged: true
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-services
    ports:
      - 8001:8001
    stdin_open: true
    tty: true
    restart: unless-stopped
    volumes:
      - ../consumer-1:/home/api
    depends_on:
      - kafka
  
  input-consumer-2:
    container_name: input-consumer-2
    image: big-data-input-consumer-2
    privileged: true
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-services
    ports:
      - 8002:8002
    stdin_open: true
    tty: true
    restart: unless-stopped
    volumes:
      - ../consumer-2:/home/api
    depends_on:
      - kafka

  input-consumer-3:
    container_name: input-consumer-3
    image: big-data-input-consumer-3
    privileged: true
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-services
    ports:
      - 8003:8003
    stdin_open: true
    tty: true
    restart: unless-stopped
    volumes:
      - ../consumer-3:/home/api
    depends_on:
      - kafka

  zookeeper:
    container_name: zookeeper-server
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  kafka:
    container_name: kafka-server
    image: confluentinc/cp-kafka:latest
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_MAX_MESSAGE_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      KAFKA_FETCH_MAX_BYTES: 10485760
    restart: unless-stopped
    depends_on:
      - zookeeper

  kafdrop:
    container_name: kafdrop-server
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    restart: unless-stopped

  minio:
    container_name: minio-server
    image: docker.io/bitnami/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DEFAULT_BUCKETS: images
    restart: unless-stopped
    volumes:
      - ./minio:/bitnami/minio/data
